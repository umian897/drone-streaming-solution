import React, { useState, useEffect, useCallback } from 'react';
import { Routes, Route, Link, useLocation, useNavigate } from 'react-router-dom';
import {
    ShieldCheck, LayoutDashboard, Drone, Rocket, AlertCircle, Video, User, LogOut, Trash2, Edit, PlusCircle, BarChart2, Server, Users
} from 'lucide-react';
// Note: For charts, you would need to install a library like 'recharts'
// npm install recharts

// --- API CONFIG ---
const ADMIN_API_URL = 'http://localhost:5001';

const apiRequest = async (endpoint, method = 'GET', body = null) => {
    const options = { method, headers: { 'Content-Type': 'application/json' } };
    if (body) options.body = JSON.stringify(body);

    const response = await fetch(`${ADMIN_API_URL}${endpoint}`, options);
    if (!response.ok) {
        const errorData = await response.json().catch(() => ({ error: 'Unknown API error' }));
        throw new Error(errorData.error || `HTTP error: ${response.status}`);
    }
    if (response.status === 204) return null;
    return response.json();
};

// --- Admin Panel Components ---

const AdminSidebar = ({ onLogout }) => {
    const location = useLocation();
    const isActive = (path) => location.pathname === path;
    
    return (
        <div className="w-64 bg-gray-800 text-gray-300 flex flex-col h-screen"> {/* THEME CHANGE */}
            <div className="p-6 flex items-center justify-center border-b border-gray-700">
                <ShieldCheck className="w-10 h-10 text-blue-400 mr-3" />
                <span className="text-2xl font-bold text-white">Admin Panel</span>
            </div>
            <nav className="flex-1 px-4 py-6 space-y-2">
                <Link to="/admin" className={`flex items-center p-3 rounded-lg text-sm font-medium ${isActive('/admin') ? 'bg-blue-600 text-white' : 'hover:bg-gray-700'}`}>
                    <LayoutDashboard className="w-5 h-5 mr-3" /> Dashboard
                </Link>
                <Link to="/admin/drones" className={`flex items-center p-3 rounded-lg text-sm font-medium ${isActive('/admin/drones') ? 'bg-blue-600 text-white' : 'hover:bg-gray-700'}`}>
                    <Drone className="w-5 h-5 mr-3" /> Drone Management
                </Link>
                <Link to="/admin/missions" className={`flex items-center p-3 rounded-lg text-sm font-medium ${isActive('/admin/missions') ? 'bg-blue-600 text-white' : 'hover:bg-gray-700'}`}>
                    <Rocket className="w-5 h-5 mr-3" /> Mission Control
                </Link>
                <Link to="/admin/incidents" className={`flex items-center p-3 rounded-lg text-sm font-medium ${isActive('/admin/incidents') ? 'bg-blue-600 text-white' : 'hover:bg-gray-700'}`}>
                    <AlertCircle className="w-5 h-5 mr-3" /> Incident Reports
                </Link>
                <Link to="/admin/users" className={`flex items-center p-3 rounded-lg text-sm font-medium ${isActive('/admin/users') ? 'bg-blue-600 text-white' : 'hover:bg-gray-700'}`}>
                    <Users className="w-5 h-5 mr-3" /> User Management
                </Link>
            </nav>
            <div className="p-4 mt-auto border-t border-gray-700">
                <button onClick={onLogout} className="w-full flex items-center p-3 rounded-lg text-sm text-red-400 hover:bg-red-600 hover:text-white">
                    <LogOut className="w-5 h-5 mr-3" /> Logout
                </button>
            </div>
        </div>
    );
};

const AdminDashboard = ({ stats }) => (
    <div>
        <h1 className="text-4xl font-bold text-gray-800 mb-6">Administrator Dashboard</h1>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {/* Stat Cards */}
            <div className="bg-white p-6 rounded-lg shadow-md flex items-center justify-between">
                <div>
                    <p className="text-sm text-gray-500">Total Drones</p>
                    <p className="text-3xl font-bold text-gray-800">{stats.totalDrones}</p>
                </div>
                <Drone className="w-12 h-12 text-blue-500" />
            </div>
             <div className="bg-white p-6 rounded-lg shadow-md flex items-center justify-between">
                <div>
                    <p className="text-sm text-gray-500">Total Missions</p>
                    <p className="text-3xl font-bold text-gray-800">{stats.totalMissions}</p>
                </div>
                <Rocket className="w-12 h-12 text-green-500" />
            </div>
             <div className="bg-white p-6 rounded-lg shadow-md flex items-center justify-between">
                <div>
                    <p className="text-sm text-gray-500">Open Incidents</p>
                    <p className="text-3xl font-bold text-gray-800">{stats.totalIncidents}</p>
                </div>
                <AlertCircle className="w-12 h-12 text-red-500" />
            </div>
             <div className="bg-white p-6 rounded-lg shadow-md flex items-center justify-between">
                <div>
                    <p className="text-sm text-gray-500">Registered Users</p>
                    <p className="text-3xl font-bold text-gray-800">{stats.totalUsers}</p>
                </div>
                <Users className="w-12 h-12 text-purple-500" />
            </div>
        </div>
        <div className="mt-8 bg-white p-6 rounded-lg shadow-md">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">System Overview</h2>
            <div className="h-64 bg-gray-100 rounded-lg flex items-center justify-center text-gray-400">
                Activity Chart Placeholder
            </div>
        </div>
    </div>
);

const DroneManagement = ({ drones, setDrones, displayMessage }) => {
    // This component will have its own state for modals and forms
    // It will use the props (drones, setDrones) to interact with the main state
    return <div className="text-3xl font-bold text-gray-800">Drone Management Page</div>
};
const MissionManagement = () => <div className="text-3xl font-bold text-gray-800">Mission Management Page</div>;
const IncidentManagement = () => <div className="text-3xl font-bold text-gray-800">Incident Management Page</div>;
const UserManagement = () => <div className="text-3xl font-bold text-gray-800">User Management Page</div>;


const AdminPanel = () => {
    const [isAuthenticated, setIsAuthenticated] = useState(false);
    const navigate = useNavigate();

    // Centralized state for all admin data
    const [drones, setDrones] = useState([]);
    const [missions, setMissions] = useState([]);
    const [incidents, setIncidents] = useState([]);
    const [users, setUsers] = useState([]);
    const [stats, setStats] = useState({});
    
    const displayMessage = (text, type) => { /* Placeholder for a toast notification system */ alert(`${type.toUpperCase()}: ${text}`); };

    useEffect(() => {
        if (!isAuthenticated) return;
        const fetchAdminData = async () => {
            try {
                const [dronesData, missionsData, incidentsData, usersData] = await Promise.all([
                    apiRequest('/api/admin/drones'),
                    apiRequest('/api/admin/missions'),
                    apiRequest('/api/admin/incidents'),
                    apiRequest('/api/admin/user_profiles'),
                ]);
                setDrones(dronesData);
                setMissions(missionsData);
                setIncidents(incidentsData);
                setUsers(usersData);
                setStats({ 
                    totalDrones: dronesData.length, 
                    totalMissions: missionsData.length, 
                    totalIncidents: incidentsData.length,
                    totalUsers: usersData.length 
                });
            } catch (error) {
                displayMessage('Failed to load admin data', 'error');
            }
        };
        fetchAdminData();
    }, [isAuthenticated]);

    const handleLogin = async (username, password) => {
        try {
            await apiRequest('/api/admin/login', 'POST', { username, password });
            setIsAuthenticated(true);
            navigate('/admin');
        } catch (error) {
            displayMessage('Invalid admin credentials', 'error');
        }
    };
    
    const handleLogout = () => {
        setIsAuthenticated(false);
        navigate('/admin/login');
    };

    if (!isAuthenticated) {
        return <AdminLoginPage onLogin={handleLogin} />;
    }

    return (
        <div className="flex min-h-screen bg-gray-100"> {/* THEME CHANGE */}
            <AdminSidebar onLogout={handleLogout} />
            <main className="flex-1 p-8 overflow-y-auto">
                <Routes>
                    <Route path="/" element={<AdminDashboard stats={stats} />} />
                    <Route path="/drones" element={<DroneManagement drones={drones} setDrones={setDrones} displayMessage={displayMessage} />} />
                    <Route path="/missions" element={<MissionManagement />} />
                    <Route path="/incidents" element={<IncidentManagement />} />
                    <Route path="/users" element={<UserManagement />} />
                </Routes>
            </main>
        </div>
    );
};

const AdminLoginPage = ({ onLogin }) => {
   
    const [password, setPassword] = useState('');
    return (
        <div className="w-full h-screen flex items-center justify-center bg-gray-800"> {/* THEME CHANGE */}
            <div className="p-8 bg-white rounded-lg shadow-lg w-full max-w-sm">
                <div className="flex items-center justify-center mb-6">
                    <ShieldCheck className="w-10 h-10 text-blue-600 mr-3" />
                    <h2 className="text-2xl font-bold text-center">Admin Panel</h2>
                </div>
                <input type="text" placeholder="Username" value={username} onChange={e => setUsername(e.target.value)} className="w-full p-3 mb-4 border rounded" />
                <input type="password" placeholder="Password" value={password} onChange={e => setPassword(e.target.value)} className="w-full p-3 mb-6 border rounded" />
                <button onClick={() => onLogin(username, password)} className="w-full py-3 bg-blue-600 text-white rounded hover:bg-blue-700">Login</button>
            </div>
        </div>
    );
};

export default AdminPanel;